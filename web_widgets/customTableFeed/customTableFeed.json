{
  "designerVersion" : "1.3.12",
  "id" : "customTableFeed",
  "name" : "tableFeed",
  "lastUpdate" : 1546927847232,
  "template" : "<!DOCTYPE HTML>\n<span ng-if=\"environment\"><identicon name=\"{{environment.component.id}}\" size=\"30\" background-color=\"[255,255,255, 0]\" foreground-color=\"[51,51,51]\"></identicon> {{environment.component.name}}</span>\n\n<!-- Modal -->\n    <!-- Show Image -->\n    <div class=\"container Modal-overlay\" ng-if=\"isModal && modal=='image'\">\n        <div class=\"row\">\n            <div class=\"col-xs-12\">\n                <a href=\"#\" ng-click=\"clickModal('','')\" class=\"pull-right\">\n                  <font color=\"#fff\" size=\"4\">Close <span class=\"fas fa-times-circle\"></span></font>\n                </a>\n            </div>\n        </div>\n        <br/>\n        <div class=\"row\">\n            <div class=\"col-xs-1\">\n            </div>\n            <div class=\"col-xs-10\">\n                <center>\n                    <img ng-src=\"/bonita/portal/formsDocumentImage?document={{dataRow}}\" class=\"show img-thumbnail\">\n                </center>\n            </div>\n            <div class=\"col-xs-1\">\n            </div>\n        </div>\n    </div>\n\n    <!-- Show Delete -->\n    <div class =\"visible-lg visible-md Modal-overlay\" ng-if=\"isModal && modal=='delete'\">\n        <div class=\"container Modal-content\">\n        <h4><b>Delete Confirmation</b></h4>\n        <hr/>\n        <div style=\"overflow:visible;\">\n            <h4>Are you sure you want to delete this data ? </h4><br/>\n            <div class=\"container\" ng-repeat=\"column in properties.columnKey track by $index\">\n                <div class=\"col-xs-4\"><b>{{properties.header[$index]}}</b></div>\n            \t<div class=\"col-xs-8\">\n            \t    <div ng-if=\"properties.columnImage.indexOf(column)>=0 && (dataRow[column]!=null && dataRow[column]!='')\">\n                        <img src=\"/bonita/portal/formsDocumentImage?document={{dataRow[column]}}\" class=\"img-thumbnail\" width=\"10%\">\n                    </div>\n                    <div ng-if=\"properties.columnImage.indexOf(column)>=0 && (dataRow[column]==null || dataRow[column]=='')\">\n                        -\n                    </div>\n                    <div ng-if=\"properties.columnImage.indexOf(column)<0\">{{$eval(column, dataRow) | uiTranslate}}</div>\n            \t</div>\n           </div>\n            <hr/>\n            <div class=\"col-sm-6\" align=\"left\">\n                <button class=\"btn btn-danger\" ng-click=\"clickModal('','')\">No</button>\n            </div>\n            <div class=\"col-sm-6\" align=\"right\">    \n                <button class=\"btn btn-primary\" ng-click=\"deleteRow(dataRow.persistenceId)\">Yes</button>\n            </div>\n        </div>\n    </div>\n    </div>\n<!-- Search Field -->\n<div>\n    <input type=\"text\" class=\"form-control\" ng-model=\"record.s\" placeholder=\"Search\">\n</div>\n<br/>\n\n<!-- Add Row -->\n<div ng-if=\"properties.isAction\">\n    <a href=\"{{urlAdd}}\" target=\"_self\" class=\"btn btn-sm btn-{{properties.style}}\"><i class=\"fas fa-plus-circle\"></i> Add</a>\n</div>\n\n<!-- Table Data For Laptop / PC / Tab -->\n<div class=\"visible-lg visible-md\">\n    \n    <!-- Pagination -->\n    <div ng-if=\"collection.length>0\">\n        <div class=\"col-xs-6\" align=\"left\">\n            <div>{{getCurrentStat()}}\n                <select class=\"btn btn-sm btn-{{properties.style}}\" ng-model=\"record.c\" ng-click=\"pagination('refresh')\">\n                    <option ng-repeat=\"maxRow in listMaxRow\" value=\"{{maxRow}}\">{{maxRow}}</option>\n                </select>\n                rows per page\n            </div>\n        </div>\n        <div class=\"col-xs-6\" align=\"right\" ng-if=\"totalData>(record.c | number)\">\n            <div class=\"btn-group\">\n                <button class=\"btn btn-sm btn-{{properties.style}} {{record.p==0 ? 'disabled' : ''}}\" ng-click=\"pagination('first')\">First</button>\n                <button class=\"btn btn-sm btn-{{properties.style}} {{record.p==0 ? 'disabled' : ''}}\" ng-click=\"pagination('prev')\">Prev</button>\n                <button ng-repeat=\"page in getListPage() track by $index\" class=\"btn btn-sm btn-{{properties.style}} {{page==record.p+1 ? 'disabled': ''}}\" ng-click=\"record.p=page-1;pagination('');\">{{page}}</button>\n                <button class=\"btn btn-sm btn-{{properties.style}} {{record.p==(getMaxData().length)-1 ? 'disabled' : ''}}\" ng-click=\"pagination('next')\">Next</button>\n                <button class=\"btn btn-sm btn-{{properties.style}} {{record.p==(getMaxData().length)-1 ? 'disabled' : ''}}\" ng-click=\"pagination('last')\">Last</button>\n            </div>\n        </div>\n    </div>\n    <br/>\n    \n    <!-- Table Data -->\n    <table class=\"table table-striped\">\n    \t<thead>\n    \t<tr>\n    \t\t<th ng-repeat=\"row in properties.header track by $index\">\n    \t\t    <a href=\"#\" ng-click=\"sortBy(properties.columnKey[$index])\">{{row}} <span ng-if=\"record.o == properties.columnKey[$index]\"><span class=\"glyphicon glyphicon-triangle-top\" ng-if=\"!record.reverseSort\"></span><span class=\"glyphicon glyphicon-triangle-bottom\" ng-if=\"record.reverseSort\"></span></span></a></th>\n        \t<th ng-if=\"properties.isAction\">\n        \t    Actions\n        \t</th>\n    \t</tr>   \n    \t</thead>\n    \t<tbody>\n    \t    <tr ng-repeat=\"row in collection | filter : record.s | orderBy : record.o : record.reverseSort track by $index\">\n                <td ng-repeat=\"column in properties.columnKey track by $index\">\n                    <div ng-if=\"properties.columnImage.indexOf(column)>=0 && (row[column]!=null && row[column]!='')\">\n                        <a href=\"#\" ng-click=\"clickModal('image',row[column])\"><img src=\"/bonita/portal/formsDocumentImage?document={{row[column]}}\" class=\"thumbnail\"></a>\n                    </div>\n                    <div ng-if=\"properties.columnImage.indexOf(column)>=0 && (row[column]==null || row[column]=='')\">\n                        -\n                    </div>\n                    <div ng-if=\"properties.columnImage.indexOf(column)<0\">{{$eval(column, row) | uiTranslate}}</div>\n                    \n                </td>\n                <td>\n                    <div ng-if=\"properties.isAction\">\n                        <a ng-if= \"properties.urlOverview.length>0\" href =\"{{properties.urlOverview}}?pid={{row.persistenceId}}\" target=\"_self\" class=\"btn btn-sm btn-primary\" ><i class=\"far fa-eye\"></i></a>\n                        <a type=\"button\" href=\"{{urlEdit}}pid={{row.persistenceId}}\" target=\"_self\" class=\"btn btn-sm btn-warning\" ><i class=\"far fa-edit\"></i></a>\n                        <button type=\"button\" class=\"btn btn-sm btn-danger\" ng-click=\"clickModal('delete',row)\"><i class=\"fas fa-eraser\"></i></button>\n                    </div>\n                </td>\n            </tr>\n    \t</tbody>\n    </table>\n</div>\n\n<!-- Feed Data For Mobile Devices -->\n<div class=\"visible-sm visible-xs\" ng-if=\"collection.length>0\">\n    \n    <!-- Pagination -->\n    <div class=\"container\">\n        <div>\n            <div>{{getCurrentStat()}}\n                <select class=\"btn btn-sm btn-{{properties.style}}\" ng-model=\"record.c\" ng-click=\"pagination('refresh')\">\n                    <option ng-repeat=\"maxRow in listMaxRow\" value=\"{{maxRow}}\">{{maxRow}}</option>\n                </select>\n                rows per page\n            </div>\n        </div>\n        <br/>\n        <div ng-if=\"totalData>(record.c | number)\">\n            <div class=\"btn-group\">\n                <button class=\"btn btn-sm btn-{{properties.style}} {{record.p==0 ? 'disabled' : ''}}\" ng-click=\"pagination('first')\">First</button>\n                <button class=\"btn btn-sm btn-{{properties.style}} {{record.p==0 ? 'disabled' : ''}}\" ng-click=\"pagination('prev')\">Prev</button>\n                <button ng-repeat=\"page in getListPage() track by $index\" class=\"btn btn-sm btn-{{properties.style}} {{page==record.p+1 ? 'disabled': ''}}\" ng-click=\"record.p=page-1;pagination('');\">{{page}}</button>\n                <button class=\"btn btn-sm btn-{{properties.style}} {{record.p==(getMaxData().length)-1 ? 'disabled' : ''}}\" ng-click=\"pagination('next')\">Next</button>\n                <button class=\"btn btn-sm btn-{{properties.style}} {{record.p==(getMaxData().length)-1 ? 'disabled' : ''}}\" ng-click=\"pagination('last')\">Last</button>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <!-- Row Data -->\n    <table class=\"table table-striped\">\n        <tbody>\n            <tr ng-repeat=\"row in collection\">\n            <td >\n                <div class=\"container\" ng-repeat=\"column in properties.columnKey track by $index\">\n                    <div class=\"col-xs-4\"><b>{{properties.header[$index]}}</b></div>\n                \t<div class=\"col-xs-8\">\n                        <span ng-if=\"properties.columnImage.indexOf(column)>=0 && (row[column]!=null && row[column]!='')\">\n                            <a href=\"#\" ng-click=\"clickModal('image',row[column])\"><img src=\"/bonita/portal/formsDocumentImage?document={{row[column]}}\" class=\"thumbnail\"></a>\n                        </span>\n                        <span ng-if=\"properties.columnImage.indexOf(column)>=0 && (row[column]==null || row[column]=='')\">\n                           : -\n                        </span>\n                        <span ng-if=\"properties.columnImage.indexOf(column)<0\">: {{$eval(column, row) | uiTranslate}}</span>\n                    </div>\n                </div>\n                <div class=\"container\" ng-if=\"properties.isAction\">\n                    <div class=\"col-xs-4\"><b>Actions</b></div>\n                \t<div class=\"col-xs-8\">\n                        <a ng-if= \"properties.urlOverview.length>0\" href =\"{{properties.urlOverview}}?pid={{row.persistenceId}}\" target=\"_self\" class=\"btn btn-sm btn-primary\" ><i class=\"far fa-eye\"></i></a>\n                        <a type=\"button\" href=\"{{urlEdit}}pid={{row.persistenceId}}\" target=\"_self\" class=\"btn btn-sm btn-warning\" ><i class=\"far fa-edit\"></i></a>\n                        <button type=\"button\" class=\"btn btn-sm btn-danger {{isModal ? 'disabled' : ''}}\" ng-click=\"clickModal('delete',collection[$index])\"><i class=\"fas fa-eraser\"></i></button>\n                    </div>\n                </div>\n                <div class=\"container\" ng-if=\"isModal && dataRow==row\">\n                    <hr/>\n                    <center><h5>Do you want to delete this data ?</h5></center>\n                    <div class=\"container col-xs-12\">    \n                        <div class=\"col-xs-6\" align=\"left\">\n                            <button class=\"btn btn-danger pull-left\" ng-click=\"clickModal('','')\">No</button>\n                        </div>\n                        <div class=\"col-xs-6\" align=\"right\">    \n                            <button class=\"btn btn-primary pull-right\" ng-click=\"deleteRow(dataRow.persistenceId)\">Yes</button>\n                        </div>\n                    </div>\n                </div>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    <hr/>\n</div>\n<div ng-if=\"collection.length==0\">\n        <br/><i>No records found</i>\n</div>",
  "controller" : "function ($scope,$http) {\n    \n    /** Local Function **/\n    function loadData(apiDataUrlIn){\n        $http.get(apiDataUrlIn)\n        .then(function(response) {\n    \n            $scope.collection = response.data;\n        });\n    }\n    \n    function countData(apiCountUrlIn){\n        \n        $http.get(apiCountUrlIn)\n            .then(function(response) {\n        \n            $scope.totalData = response.data[0];\n        });\n    }\n    \n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    \n    /** Filters **/\n    $scope.filters = [];\n    if($scope.queryName!=\"find\"){\n        var i=0;\n        for(i=0;i<$scope.properties.filters.length;i++){\n            $scope.filters = \"&f=\"+encodeURI($scope.properties.filters[i]);\n        }\n    }\n    \n    /** Record **/\n    $scope.record = {\n        \"p\":0,\n        \"c\":10,\n        \"o\":$scope.properties.columnKey[0],\n        \"s\":\"\",\n        \"reverseSort\":false\n    };\n    \n    /** First Load **/\n    $scope.firstLoad = true;\n    if($scope.firstLoad){\n        /** BDM API **/\n        var apiDataUrl = \"../API/bdm/businessData/\"+$scope.properties.businessData+\"?q=\"+$scope.properties.queryName+\"&p=\"+$scope.record.p+\"&c=\"+$scope.record.c+$scope.filters.toString();\n        var apiCountUrl = \"../API/bdm/businessData/\"+$scope.properties.businessData+\"?q=countFor\"+capitalizeFirstLetter($scope.properties.queryName)+\"&p=0&c=1\"+$scope.filters.toString();\n        \n        /** Load Data **/\n        loadData(apiDataUrl);\n        countData(apiCountUrl);\n        \n        $scope.firstLoad = false;\n    }\n    \n    /** Sorting **/\n    $scope.sortBy = function(fieldName) {\n        $scope.record.reverseSort = ($scope.record.o === fieldName) ? !$scope.record.reverseSort : false;\n        $scope.record.o = fieldName.toString();\n\n    };\n    \n    /** Pagination **/\n    $scope.listMaxRow = [10,50,100,200,500];\n    \n    $scope.pagination = function(type){\n        \n        switch(type) {\n            case \"next\":\n                if($scope.record.p<($scope.getMaxData().length-1)){$scope.record.p=$scope.record.p+1;}\n                break;\n            case \"prev\":\n                if($scope.record.p>0){$scope.record.p=$scope.record.p-1;}\n                break;\n            case \"first\":\n                $scope.record.p=0;\n                break;\n            case \"last\":\n                $scope.record.p=$scope.getMaxData().length-1;\n                break;\n            case \"refresh\":\n                $scope.record.p=0;\n                $scope.record.o=$scope.properties.columnKey[0];\n                $scope.record.reverseSort=false;\n                break;\n        }\n        \n        /** BDM API **/\n        var apiDataUrl = \"../API/bdm/businessData/\"+$scope.properties.businessData+\"?q=\"+$scope.properties.queryName+\"&p=\"+$scope.record.p+\"&c=\"+$scope.record.c+$scope.filters.toString();\n        var apiCountUrl = \"../API/bdm/businessData/\"+$scope.properties.businessData+\"?q=countFor\"+capitalizeFirstLetter($scope.properties.queryName)+\"&p=0&c=1\"+$scope.filters.toString();\n        \n        /** Load Data **/\n        loadData(apiDataUrl);\n        countData(apiCountUrl);\n\n    };\n    \n    $scope.getCurrentStat = function(){\n        var from = ($scope.record.p*$scope.record.c)+1;\n        if($scope.record.p===0){from=1;}\n        else if(from>$scope.totalData){from=$scope.totalData;}\n        \n        var end = (($scope.record.p+1)*$scope.record.c);\n        if($scope.record.p===0){end=($scope.record.p+1)*$scope.record.c;}\n        else if(end>$scope.totalData){end=$scope.totalData;}\n        \n        return String('Showing ' + from.toString() + ' to ' + end.toString() + ' of ' + $scope.totalData.toString() + ' rows');\n    };\n    \n    $scope.getMaxData = function(){\n        return new Array(Math.ceil($scope.totalData/$scope.record.c));\n    };\n    \n    $scope.getListPage = function(){\n        \n        var i=0;\n        var listPage = [];\n        var page=0;\n        var maxPage = Math.round($scope.totalData/$scope.record.c);\n        for(i=1;i<=5;i++){\n        \n            if($scope.record.p<=2){\n                if(i<=maxPage){listPage.push(i);}\n            }   \n            else if($scope.record.p>2){\n                \n                if($scope.record.p<maxPage){}\n                else if($scope.record.p>maxPage){$scope.record.p=maxPage;}\n                    \n                if(listPage.length===0){\n                    page=$scope.record.p-1;\n                    listPage.push(page);\n                }\n                else if(page<maxPage){\n                    page=page+1;\n                    listPage.push(page);\n                }\n            }\n        }\n        return listPage;\n            \n    };\n    \n    \n    /** Modal **/\n    $scope.isModal = false;\n    $scope.modal=\"\";\n    $scope.dataRow = \"\";\n    \n    $scope.clickModal = function(modal,data){\n        $scope.dataRow = data;\n        $scope.modal = modal;\n        $scope.isModal = !$scope.isModal;\n        \n    };\n    \n    \n    /** Delete Function **/\n    $scope.deleteRow = function(pid){\n        $http.post($scope.urlDelete,{'pid':pid,'businessData':$scope.properties.businessData})\n            .then(function(response) {\n            $scope.isDelete=!$scope.isDelete;\n            window.location.reload();\n        });\n    };\n    \n    /** Url for add row data **/\n    var apiUrlAdd = \"../API/bpm/process?o=version&f=name=\"+encodeURI($scope.properties.processAdd);\n    $http.get(apiUrlAdd)\n        .then(function(response) {\n    \n        var process = response.data[0];\n    \n        $scope.urlAdd = \"/bonita/portal/resource/process/\"+ encodeURI(process.name) +\"/\" + process.version + \"/content/?id=\" + process.id +\"&senderUrl=\"+ window.top.location.href+\"&\";\n    });\n    \n    /** Url for edit row data **/\n    var apiUrlEdit = \"../API/bpm/process?o=version&f=name=\"+encodeURI($scope.properties.processEdit);\n    $http.get(apiUrlEdit)\n        .then(function(response) {\n    \n        var process = response.data[0];\n    \n        $scope.urlEdit = \"/bonita/portal/resource/process/\"+ encodeURI(process.name) +\"/\" + process.version + \"/content/?id=\" + process.id +\"&senderUrl=\"+ window.top.location.href+\"&\";\n    });\n    \n    /** Url for delete row data **/\n    var apiUrlDelete = \"../API/bpm/process?o=version&f=name=\"+encodeURI(\"SYS_DeleteData\");\n    $http.get(apiUrlDelete)\n        .then(function(response) {\n    \n        var process = response.data[0];\n        \n        $scope.urlDelete = \"../API/bpm/process/\"+process.id+\"/instantiation\";\n    }); \n}\n",
  "custom" : true,
  "properties" : [ {
    "label" : "Headers",
    "name" : "header",
    "caption" : "Comma separated",
    "type" : "collection",
    "defaultValue" : [ "Id", "Name", "Date", "Note" ],
    "bond" : "expression"
  }, {
    "label" : "Column keys",
    "name" : "columnKey",
    "caption" : "Comma separated",
    "help" : "",
    "type" : "collection",
    "bond" : "expression"
  }, {
    "label" : "Column images",
    "name" : "columnImage",
    "caption" : "Comma separated",
    "help" : "Column name that contains image",
    "type" : "collection",
    "bond" : "expression"
  }, {
    "label" : "Business Data",
    "name" : "businessData",
    "caption" : "example : com.company.model.Customer",
    "type" : "text",
    "choiceValues" : [ "default", "primary", "link", "info", "warning", "danger" ],
    "bond" : "expression"
  }, {
    "label" : "Query Name",
    "name" : "queryName",
    "caption" : "example : findByName",
    "help" : "BDM query name",
    "type" : "text",
    "bond" : "expression"
  }, {
    "label" : "Filters",
    "name" : "filters",
    "caption" : "Comma separated",
    "help" : "example : gender=men, isActive=true",
    "type" : "collection",
    "bond" : "expression"
  }, {
    "label" : "Show Action",
    "name" : "isAction",
    "caption" : "",
    "type" : "boolean",
    "defaultValue" : true,
    "bond" : "expression"
  }, {
    "label" : "Process Name For Add",
    "name" : "processAdd",
    "caption" : "Process technical name for add new record",
    "type" : "text",
    "bond" : "constant"
  }, {
    "label" : "Process Name For Edit",
    "name" : "processEdit",
    "caption" : "Process technical name for editing the record",
    "type" : "text",
    "bond" : "constant"
  }, {
    "label" : "Overview URL",
    "name" : "urlOverview",
    "type" : "text",
    "bond" : "constant"
  }, {
    "label" : "Button Style",
    "name" : "style",
    "type" : "choice",
    "defaultValue" : "default",
    "choiceValues" : [ "default", "primary", "link", "info", "warning", "danger" ],
    "bond" : "constant"
  } ],
  "assets" : [ {
    "id" : "06ec47e6-e6fe-4cb1-b5c1-5e8375ac4089",
    "name" : "custom-style.css",
    "type" : "css",
    "order" : 1,
    "external" : false
  } ],
  "requiredModules" : [ ],
  "type" : "widget",
  "hasHelp" : false
}