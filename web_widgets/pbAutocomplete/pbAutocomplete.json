{
  "designerVersion" : "1.8.40",
  "id" : "pbAutocomplete",
  "name" : "Autocomplete",
  "lastUpdate" : 1556764054925,
  "template" : "<div ng-class=\"{\n    'form-horizontal': properties.labelPosition === 'left' && !properties.labelHidden,\n    'row': properties.labelPosition === 'top' && !properties.labelHidden || properties.labelHidden\n    }\">\n    <div class=\"form-group\">\n        <label\n            ng-if=\"!properties.labelHidden\"\n            ng-class=\"{ 'control-label--required': properties.required }\"\n            class=\"control-label col-xs-{{ !properties.labelHidden && properties.labelPosition === 'left' ? properties.labelWidth : 12 }}\">\n            {{ properties.label | uiTranslate }}\n        </label>\n        <div class=\"col-xs-{{ 12 - (!properties.labelHidden && properties.labelPosition === 'left' ? properties.labelWidth : 0) }}\" >\n            <input\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"{{ properties.placeholder | uiTranslate }}\"\n                typeahead-append-to-body=\"true\"\n                typeahead=\"ctrl.getLabel(item) for item in properties.availableValues | filter:$viewValue\"\n                typeahead-template-url=\"customTypeaheadForInputAutocomplete.html\"\n                typeahead-wait-ms=\"300\"\n                ng-model=\"properties.value\"\n                ng-model-options=\"{ allowInvalid: true }\"\n                name=\"{{ctrl.name}}\"\n                ng-required=\"properties.required\"\n                ng-readonly=\"properties.readOnly\">\n\n            <div ng-messages=\"$form[ctrl.name].$dirty && $form[ctrl.name].$error \" ng-messages-include=\"forms-generic-errors.html\" role=\"alert\"></div>\n\n            <!-- It doesn't work if we put it inside form.html -->\n            <script type=\"text/ng-template\" id=\"customTypeaheadForInputAutocomplete.html\">\n                <a  bind-html-unsafe=\"match.label | typeaheadHighlight:query\"></a>\n            </script>\n        </div>\n    </div>\n</div>\n",
  "icon" : "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 50 20'><g><path fill='#fff' d='M0,0v20h50V0H0z M49,19H1V1h48V19z M14.9,2h-1v1h1V2z M13.9,3h-1v14h1V3z M11.9,2v1h1V2H11.9z M12.9,17h-1v1h1V17z M14.9,18v-1h-1v1H14.9z M6.7,16.6c1.7,0,2.7-1,3.2-1.8h0l0.1,1.6h1.6c-0.1-0.8-0.1-1.6-0.1-2.6v-7H9.7v5.9c0,0.3-0.1,0.6-0.2,0.9c-0.3,0.8-1.1,1.6-2.3,1.6c-1.6,0-2.2-1.2-2.2-3.1V6.7H3.3v5.7C3.3,15.7,5.2,16.6,6.7,16.6z'/><path fill='#CBD5E1' d='M27.4,6.4c-2.8,0-4.5,2.3-4.5,5.2c0,2.9,1.8,4.9,4.8,4.9c1.5,0,2.6-0.3,3.2-0.6l-0.3-1.3c-0.7,0.3-1.4,0.5-2.7,0.5c-1.8,0-3.3-1-3.3-3.4h6.8c0-0.2,0.1-0.5,0.1-0.8C31.4,9.2,30.5,6.4,27.4,6.4z M24.5,10.6c0.1-1.2,0.9-2.9,2.7-2.9c2,0,2.5,1.7,2.4,2.9H24.5z M38.3,6.5v1.7c-0.2,0-0.4-0.1-0.6-0.1c-1.2,0-2.1,0.9-2.4,2.3c0,0.2-0.1,0.5-0.1,0.8v5.2h-1.7V9.7c0-1.1,0-2.1-0.1-3H35l0.1,1.9h0.1c0.4-1.3,1.5-2.1,2.7-2.1C38,6.4,38.2,6.5,38.3,6.5z M21.3,13.6c0,1.7-1.3,2.9-3.6,2.9c-1.1,0-2-0.3-2.7-0.7l0.4-1.3c0.5,0.3,1.4,0.7,2.3,0.7c1.3,0,1.9-0.6,1.9-1.4c0-0.8-0.5-1.3-1.8-1.8c-1.7-0.6-2.6-1.6-2.6-2.7c0-1.6,1.3-2.8,3.3-2.8c1,0,1.8,0.3,2.4,0.6l-0.4,1.3c-0.4-0.2-1.1-0.6-2-0.6c-1,0-1.6,0.6-1.6,1.3c0,0.8,0.6,1.2,1.8,1.6C20.4,11.4,21.3,12.2,21.3,13.6z'/></g></svg>",
  "controller" : "function PbAutocompleteCtrl($scope, $parse, $log, widgetNameFactory) {\n\n  'use strict';\n\n  function createGetter(accessor) {\n    return accessor && $parse(accessor);\n  }\n\n  this.getLabel = createGetter($scope.properties.displayedKey) || function (item) {\n    return typeof item === 'string' ? item : JSON.stringify(item);\n  };\n\n  this.name = widgetNameFactory.getName('pbAutocomplete');\n\n  if (!$scope.properties.isBound('value')) {\n    $log.error('the pbAutocomplete property named \"value\" need to be bound to a variable');\n  }\n}\n",
  "description" : "Input field with content completion from a given list",
  "custom" : false,
  "order" : 4,
  "properties" : [ {
    "label" : "Read-only",
    "name" : "readOnly",
    "type" : "boolean",
    "defaultValue" : false,
    "bond" : "expression"
  }, {
    "label" : "Required",
    "name" : "required",
    "help" : "In the context of a form container, use $form.$invalid as a Boolean to check form validity in a widget property",
    "type" : "boolean",
    "defaultValue" : false,
    "bond" : "expression"
  }, {
    "label" : "label Hidden",
    "name" : "labelHidden",
    "type" : "boolean",
    "defaultValue" : false,
    "bond" : "constant"
  }, {
    "label" : "Label",
    "name" : "label",
    "showFor" : "properties.labelHidden.value === false",
    "type" : "text",
    "defaultValue" : "Default name",
    "bond" : "interpolation"
  }, {
    "label" : "Label position",
    "name" : "labelPosition",
    "showFor" : "properties.labelHidden.value === false",
    "type" : "choice",
    "defaultValue" : "top",
    "choiceValues" : [ "left", "top" ],
    "bond" : "constant"
  }, {
    "label" : "Label width",
    "name" : "labelWidth",
    "showFor" : "properties.labelHidden.value === false",
    "type" : "integer",
    "defaultValue" : 4,
    "bond" : "constant",
    "constraints" : {
      "min" : "1",
      "max" : "12"
    }
  }, {
    "label" : "Placeholder",
    "name" : "placeholder",
    "help" : "Short hint that describes the expected value",
    "type" : "text",
    "bond" : "interpolation"
  }, {
    "label" : "Available values",
    "name" : "availableValues",
    "help" : "Can be a list of objects. Use 'Displayed key' to refine suggestions",
    "type" : "collection",
    "defaultValue" : [ "London", "Paris", "San Francisco" ],
    "bond" : "expression"
  }, {
    "label" : "Displayed key",
    "name" : "displayedKey",
    "help" : "Object key to display",
    "type" : "text",
    "bond" : "constant"
  }, {
    "label" : "Value",
    "name" : "value",
    "caption" : "Any variable: <i>myData</i> or <i>myData.attribute</i>",
    "help" : "Read-write binding, initialized or updated by users' input (bi-directional bond)",
    "type" : "text",
    "bond" : "variable"
  } ],
  "assets" : [ {
    "name" : "ui-bootstrap-tpls-0.13.0.min.js",
    "type" : "js",
    "order" : 1,
    "external" : false
  } ],
  "requiredModules" : [ "ui.bootstrap.typeahead", "ui.bootstrap.tpls" ],
  "type" : "widget",
  "hasHelp" : false
}